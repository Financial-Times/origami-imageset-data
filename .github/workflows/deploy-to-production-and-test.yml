name: Deploy to production and test
on:
  push:
    branches: [ master ]
env:
  terraform_version: '0.13'
  terraform_working_dir: 'terraform/'
  fastly_service_id: '3cUsylommuzAVcvd80Sk5A'
jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.terraform_working_dir }}
    steps:
      - uses: actions/checkout@v2

      - run: git fetch --prune --unshallow

      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 12.x

      - uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      - name: Turnstyle
        uses: softprops/turnstyle@v1
        with:
          same-branch-only: false

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform import
        id: import
        run: terraform import fastly_service_v1.app ${{ env.fastly_service_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FASTLY_API_KEY: ${{ secrets.FASTLY_API_KEY }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        env:
          FASTLY_API_KEY: ${{ secrets.FASTLY_API_KEY }}

      - name: Terraform Apply
        id: apply
        run: terraform apply -no-color --auto-approve
        env:
          FASTLY_API_KEY: ${{ secrets.FASTLY_API_KEY }}

      - run: sleep 60

  end-to-end-test:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 12.x
      - run: npm ci
      - run: npm test
