name: Deploy to production and test
on:
  push:
    branches: [ master ]
env:
  terraform_version: '0.12.29'
  terraform_working_dir: 'terraform/'
  fastly_service_id: '3cUsylommuzAVcvd80Sk5A'
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 12.x
      - run: npm ci
      - name: 'Terraform Format'
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_version: ${{ env.terraform_version }}
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: ${{ env.terraform_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Turnstyle
        uses: softprops/turnstyle@v1
        with:
          same-branch-only: false
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_version: ${{ env.terraform_version }}
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: ${{ env.terraform_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Import Fastly Service'
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_version: ${{ env.terraform_version }}
          tf_actions_subcommand: 'import'
          tf_actions_working_dir: ${{ env.terraform_working_dir }}
          tf_actions_comment: true
          args: 'fastly_service_v1.app ${{ env.fastly_service_id }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FASTLY_API_KEY: ${{ secrets.FASTLY_API_KEY }}
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_version: ${{ env.terraform_version }}
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: ${{ env.terraform_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_version: ${{ env.terraform_version }}
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{ env.terraform_working_dir }}
          tf_actions_comment: true
          args: '-out=plan.tfplan'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FASTLY_API_KEY: ${{ secrets.FASTLY_API_KEY }}
      - name: 'Terraform Apply'
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_version: ${{ env.terraform_version }}
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: ${{ env.terraform_working_dir }}
          tf_actions_comment: true
          args: '--auto-approve'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FASTLY_API_KEY: ${{ secrets.FASTLY_API_KEY }}
      - run: sleep 60

  end-to-end-test:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 12.x
      - run: npm ci
      - run: npm test
